---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nydus-snapshotter-configs
  labels:
    app: nydus-snapshotter
  namespace: nydus-system
data:
  FS_DRIVER: "fusedev"
  ENABLE_CONFIG_FROM_VOLUME: "false"
  ENABLE_RUNTIME_SPECIFIC_SNAPSHOTTER: "false"
  ENABLE_SYSTEMD_SERVICE: "true"

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nydus-snapshotter
  namespace: nydus-system
  labels:
    app: nydus-snapshotter
spec:
  selector:
    matchLabels:
      app: nydus-snapshotter
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nydus-snapshotter

    spec:
      serviceAccountName: nydus-snapshotter-sa
      hostNetwork: true
      hostPID: true
      containers:
      - name: nydus-snapshotter
      # The image tag will be updated to reflect the release version in GitHub Release action.
        image: "ghcr.io/containerd/nydus-snapshotter:latest"
        imagePullPolicy: Always
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: FS_DRIVER
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: FS_DRIVER
                optional: true
          - name: ENABLE_CONFIG_FROM_VOLUME
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: ENABLE_CONFIG_FROM_VOLUME
                optional: true 
          - name: ENABLE_RUNTIME_SPECIFIC_SNAPSHOTTER
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: ENABLE_RUNTIME_SPECIFIC_SNAPSHOTTER
                optional: true
          - name: ENABLE_SYSTEMD_SERVICE
            valueFrom:
              configMapKeyRef:
                name: nydus-snapshotter-configs
                key: ENABLE_SYSTEMD_SERVICE
                optional: true                    
        lifecycle:
          preStop:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /opt/nydus-artifacts/opt/nydus/snapshotter.sh cleanup
        command: 
         - bash
         - -c
         - |-
           /opt/nydus-artifacts/opt/nydus/snapshotter.sh deploy
        volumeMounts:
        - name: config-volume
          mountPath: "/etc/nydus-snapshotter"
        - name: nydus-lib
          mountPath: "/var/lib/containerd-nydus"
          mountPropagation: Bidirectional
        - name: nydus-run
          mountPath: "/run/containerd-nydus"
          mountPropagation: Bidirectional
        - name: nydus-opt
          mountPath: "/opt/nydus"
          mountPropagation: Bidirectional
        - name: nydus-etc
          mountPath: "/etc/nydus"
          mountPropagation: Bidirectional     
        - name: containerd-conf
          mountPath: "/etc/containerd/"
        - name: local-bin
          mountPath: "/usr/local/bin/"
        - name: etc-systemd-system
          mountPath: "/etc/systemd/system/"
        securityContext:
          privileged: true

      volumes:
      - name: config-volume
        configMap:
          name: nydus-snapshotter-configs
          optional: true
      - name: nydus-run
        hostPath:
          path: /run/containerd-nydus
          type: DirectoryOrCreate
      - name: nydus-lib
        hostPath:
          path: /var/lib/containerd-nydus
          type: DirectoryOrCreate
      - name: nydus-opt
        hostPath:
          path: /opt/nydus
          type: DirectoryOrCreate
      - name: nydus-etc
        hostPath:
          path: /etc/nydus
          type: DirectoryOrCreate
      - name: containerd-conf
        hostPath:
          path: /etc/containerd/
      - name: local-bin
        hostPath:
          path: /usr/local/bin/
      - name: etc-systemd-system
        hostPath:
          path: /etc/systemd/system/
      
